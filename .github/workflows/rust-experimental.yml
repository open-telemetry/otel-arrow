# This workflow is for running CI on experimental Rust code in the repository.
# It is much slimmer than the Rust-CI workflow and doesn't require the same level of maturity.
name: Rust-Experimental
permissions:
  contents: read

on:
  # run this job on every push and pull request
  # only for changes in the rust directory
  push:
    paths:
      - 'rust/**'
      - .github/workflows/rust-experimental.yml
      # otap-dataflow is covered by the main Rust-CI workflow
      - '!rust/otap-dataflow/**'
  pull_request:
    paths:
      - 'rust/**'
      - .github/workflows/rust-experimental.yml
      # otap-dataflow is covered by the main Rust-CI workflow
      - '!rust/otap-dataflow/**'
      

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        folder: [beaubourg, otel-arrow-rust, experimental/query_abstraction, experimental/syslog-cef-receivers]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0 # latest on /master branch as of 2025-04-02
        with:
          toolchain: stable
      - name: cargo test ${{ matrix.folder }}
        run: cargo test
        working-directory: ./rust/${{ matrix.folder }}

  fmt:
    strategy:
      fail-fast: false
      matrix:
        folder: [beaubourg, otel-arrow-rust, experimental/query_abstraction, experimental/syslog-cef-receivers]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0 # latest on /master branch as of 2025-04-02
        with:
          toolchain: nightly
          components: rustfmt
      - name: cargo fmt ${{ matrix.folder }}
        run: cargo fmt --all -- --check 
        working-directory: ./rust/${{ matrix.folder }}

  clippy:
    strategy:
      fail-fast: false
      matrix:
        folder: [beaubourg, otel-arrow-rust, experimental/query_abstraction, experimental/syslog-cef-receivers]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0 # latest on /master branch as of 2025-04-02
        with:
          toolchain: stable
          components: clippy
      - name: cargo clippy ${{ matrix.folder }}
        # To not block initial checkin of CI, removing build break on warnings for now
        # TODO: re-enable '-- -D warnings' when we have fixed all clippy warnings
        run: cargo clippy --all-targets --all-features
        working-directory: ./rust/${{ matrix.folder }}

  cargo_deny:
    strategy:
      fail-fast: false
      matrix:
        folder: [beaubourg, otel-arrow-rust, experimental/query_abstraction, experimental/syslog-cef-receivers]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true
      - uses: arduino/setup-protoc@c65c819552d16ad3c9b72d9dfd5ba5237b9c906b # v3.0.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@56f84321dbccf38fb67ce29ab63e4754056677e0 # latest on /master branch as of 2025-04-02
        with:
          toolchain: stable
      - name: advisories
        if: '!cancelled()'
        uses: EmbarkStudios/cargo-deny-action@34899fc7ba81ca6268d5947a7a16b4649013fea1 # v2.0.11
        with:
          command: check advisories
          manifest-path: ./rust/${{ matrix.folder }}/Cargo.toml
      - name: licenses
        if: '!cancelled()'
        uses: EmbarkStudios/cargo-deny-action@34899fc7ba81ca6268d5947a7a16b4649013fea1 # v2.0.11
        with:
          command: check licenses
          manifest-path: ./rust/${{ matrix.folder }}/Cargo.toml
      - name: bans
        if: '!cancelled()'
        uses: EmbarkStudios/cargo-deny-action@34899fc7ba81ca6268d5947a7a16b4649013fea1 # v2.0.11
        with:
          command: check bans
          manifest-path: ./rust/${{ matrix.folder }}/Cargo.toml
      - name: sources
        if: '!cancelled()'
        uses: EmbarkStudios/cargo-deny-action@34899fc7ba81ca6268d5947a7a16b4649013fea1 # v2.0.11
        with:
          command: check sources
          manifest-path: ./rust/${{ matrix.folder }}/Cargo.toml