[package]
name = "otap-df-otap"
description = "OTAP nodes"
version.workspace = true
authors.workspace = true
repository.workspace = true
license.workspace = true
publish.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[dependencies]
arrow.workspace = true
arrow-ipc.workspace = true
async-trait.workspace = true
ciborium.workspace = true
futures.workspace = true
futures-timer.workspace = true
http.workspace = true
humantime-serde.workspace = true
log.workspace = true
object_store.workspace = true
otel-arrow-rust.workspace = true
parquet.workspace = true
thiserror = { workspace = true }
serde_with = { workspace = true }
serde_cbor = { workspace = true }
serde_json = { workspace = true }
simdutf8 = { workspace = true }
slotmap = { workspace = true }
tokio = { workspace = true }
linkme = { workspace = true }
uuid.workspace = true
weaver_forge.workspace = true
weaver_common.workspace = true
tonic = { workspace = true }
tonic-middleware = { workspace = true }
tonic-prost = { workspace = true }
prost = { workspace = true }
smallvec = { workspace = true }
bitflags = { workspace = true }

otap-df-engine = { path = "../engine" }
otap-df-engine-macros = { path = "../engine-macros" }
otap-df-channel = { path = "../channel" }
otap-df-config = { path = "../config" }
otap-df-pdata = { path = "../pdata" }
otap-df-telemetry = { path = "../telemetry" }
otap-df-telemetry-macros = { path = "../telemetry-macros" }

chrono.workspace = true
tower-service.workspace = true
fluke-hpack.workspace = true
serde.workspace = true
tokio-stream.workspace = true
async-stream.workspace = true
humantime.workspace = true
weaver_semconv.workspace = true
weaver_resolved_schema.workspace = true
weaver_resolver.workspace = true
rand.workspace = true
zip.workspace = true

# Geneva exporter dependencies
geneva-uploader = { version = "0.3.0", optional = true }
opentelemetry-proto = { workspace = true, optional = true }

[features]
# Base experimental feature - enabled by all experimental exporters
experimental-exporters = []
# Experimental exporters
geneva-exporter = ["experimental-exporters", "dep:geneva-uploader", "dep:opentelemetry-proto"]

data_engine_kql_parser = { path = "../../../experimental/query_engine/kql-parser" }
data_engine_expressions = { path = "../../../experimental/query_engine/expressions" }

[dev-dependencies]
flume = { workspace = true }
portpicker.workspace = true
pretty_assertions.workspace = true
tempfile.workspace = true
url.workspace = true
tokio-util.workspace = true
