settings:
  default_pipeline_ctrl_msg_channel_size: 100
  default_node_ctrl_msg_channel_size: 100
  default_pdata_channel_size: 100

nodes:
  receiver:
    kind: receiver
    plugin_urn: "urn:otel:otap:fake_data_generator:receiver"
    out_ports:
      out_port:
        destinations:
          - filter
        dispatch_strategy: round_robin
    config:
      traffic_config:
        max_signal_count: 1000
        max_batch_size: 100
        signals_per_second: 100
        log_weight: 100
      registry_path: https://github.com/open-telemetry/semantic-conventions.git[model]
  filter:
    kind: processor
    plugin_urn: "urn:otel:filter:processor"
    out_ports:
      out_port:
        destinations:
          - debug
        dispatch_strategy: round_robin
    config:
      logs:
        exclude:
          match_type: strict
          resource_attributes:
            - key: fake_data_generator
              value: v0
          record_attributes:
            - key: fake_data_generator
              value: v0
          severity_texts:
            - WARN
          severity_number: null
          bodies:
            - body_text
        include:
          match_type: strict
          resource_attributes:
            - key: fake_data_generator
              value: v1
          record_attributes:
            - key: gen_ai.system
              value: openai
          severity_texts: []
          severity_number: null
          bodies: []
        log_record: []
  debug:
    kind: processor
    plugin_urn: "urn:otel:debug:processor"
    out_ports:
      out_port:
        destinations:
          - noop
        dispatch_strategy: round_robin
    config:
      verbosity: detailed
      mode: signal
  noop:
    kind: exporter
    plugin_urn: "urn:otel:noop:exporter"
    config:
